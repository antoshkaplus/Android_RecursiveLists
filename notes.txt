
better to sync on client side and only after that
try to update database on server side in transaction,
returning some kind of result...

if update was rejected do synchronization again with new instance
of database on server side

update instance in PersistenceManager by first retrieving this instance.
PersistenceManager watches your changes on instances that you retrieved

adapter should receive the whole object, not parts of it, that he needs.
let him what he needs and what he doesn't

can use singleTop activity probably

onMenuItemSelected - more generic, should not usually be used



Google Tasks API updated date is read only. That means we can track import/sync with this.
This stays for both task and task list. Have to check what about inner tasks?


Creating Datastore classes with parents localizes transactions.

don't count parent change as update? really... what about offline changes like this?


each server has it's own timestamps.
and whatever object changed and saved on server has to have server timestamp.


when we try to write something on server side there is possibility of some problem,
that transaction fails many many times and because of it timestamp becomes messed up...


